
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<iostream.h>
#include<time.h>
#include<iomanip.h>
#include<fstream.h>
#include<string.h>
#include<dos.h>
#include<graphics.h>

void logo()
{clrscr();
 float k;
int i,j,gd=DETECT,gm;
initgraph(&gd,&gm,"C:\\TC\\BGI") ;
setbkcolor(YELLOW);
setcolor(RED);//delay(2000);
for(k=0;k<=9;k++)
{ cleardevice();
settextstyle(10,HORIZ_DIR,k);
setfillstyle(LINE_FILL,12);
outtextxy( 25,100,"S");
//delay(250);
outtextxy( 25,100," T");
//delay(250);
outtextxy( 25,100,"  A");
//delay(250);
outtextxy( 25,100,"   R");
//delay(250);
outtextxy( 25,100,"    K");
//delay(250);
outtextxy( 25,100,"     -");
//delay(250);
outtextxy( 25,100,"      R");
//delay(250);
outtextxy( 25,100,"       L");
//delay(250);
delay(30);
}setbkcolor(WHITE);
delay(100);
setbkcolor(YELLOW);
for(i=330,j=290;i<=500,j>=25;i++,j--)
{setcolor(RED);
delay(1);
rectangle(320,300,i,320);
rectangle(j,300,300,320);
}
settextstyle(7,HORIZ_DIR,2);
outtextxy(350,420,"powered by Annie Miss..");
delay(500);
getch();
}

void alphaload()
{
clrscr();
int i,gd=DETECT,gm,a,b;
initgraph(&gd,&gm,"C:\\TC\\BGI");

setbkcolor(RED);
for(i=0;i<=690;i++)
{ setcolor(YELLOW);

setcolor(YELLOW);
delay(1);
setcolor(CYAN);
rectangle(i,370,i+15,450);
setcolor(YELLOW);
rectangle(i,370,i+5,450);



}
setbkcolor(RED);
setcolor(RED);
clrscr();
cleardevice();
}







char f[10]="f";
char s[10]="s";
int addr,ad,flag,f1,d,m,amt;
float tamt;

class login
{
public:
char id[100];
char pass[100],*password;
void getid();
void displayid();
};

void login::displayid()
{cout<<"\n\nID :";puts(id);
cout<<"Password :";puts(pass);
}

void login::getid()
{
cout<<"Enter your ID :\n";gets(id);
password=getpass("enter the password :");
strcpy(pass,password);
}

class detail
{
 public:
 int tno;
 char tname[100];
 char bp[100];
 char dest[100];
 int c1,c1fare;
 int c2,c2fare;
 int d,m,y;
 void getdetail();
 void dispdetail();

};

void detail::getdetail()
{
 cout<<"enter the details\n";
 cout<<"_________________\n\n";
 cout<<"1.Train No :\n" ;
 cin>>tno;
 cout<<"\n2.Boarding Point :\n";
 gets(bp);
 cout<<"\n3.Destination Point :\n";
 gets(dest);
 cout<<"\nNo of seats in 1st class :";
 cin>>c1;
 cout<<"\n Fare (per ticket):\n";
 cin>>c1fare;
 cout<<"\n No of seats in 2nd class : ";
 cin>>c2;
 cout<<"\n Fare (per ticket):\n";
 cin>>c2fare;
 cout<<"Date of Travel :\n";
 cin>>d>>m>>y;
}

void detail::dispdetail()
{
 cout<<tno<<"  "<<bp<<"  "<<dest<<"\t"<<d<<"-"<<m<<"-"<<y<<"  "<<c1<<"\t  "<<c2<<"\t\t"<<c1fare<<"\t"<<c2fare<<"\n";
    
}
 class reser
 {
 public:
 int pnr;
 int tno1;
 char ch;
 char bp[10];
 char dest[100];
 char pname[10][100];
 int age[20];
 char clas[10];
 int nosr;
 int i;
 int d,m,y;
 int con;
 float amc;
 void getresdet();
 void displayres();
 };
 
void reser::getresdet()
 {
  clrscr();
  cout<<"Enter details:\n";
  cout<<"______________\n";
  cout<<"1.Train no :\n\n";
  cin>>tno1;
 //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  cout<<"3.Boarding point :\n\n";
  gets(bp);
  cout<<"4.Destination point :\n\n";
  gets(dest);
  cout<<"5.No of seats required :\n\n";
  cout<<"_________________________\n\n";
  cin>>nosr;
  for(i=0;i<nosr;i++)
  {
  cout<<"("<<i+1<<")"<<"Passenger name :\n\n";gets(pname[i]);
  cout<<"Passenger age :\n\n";cin>>age[i];
  cout<<"Enter class (f/s) :\n\n";
  gets(clas);
  }
  cout<<"Date of travel :\n\n";
  cout<<"Day :\n";cin>>d;
  cout<<"Month :\n";cin>>m;
  cout<<"Year :\n";cin>>y;
  cout<<"Enter concession category :\n";
   cout<<"___________________________\n\n";
   cout<<"1.Man above 60 years of age\n";
   cout<<"2.Woman above 58 years of age\n";
   cout<<"3.Children below 5 years of age\n";
   cout<<"4.None\n\n";
   cin>>con;
   clrscr();
   }


   void reser::displayres()
   {cleardevice();
   cout<<"___________________________________________________\n";
   cout<<" PNR no :\t"<<pnr;
   cout<<"\nTrain No :\t"<<tno;
   cout<<"\nBoarding point :\t";puts(bp);
   cout<<"\nDestination point :\t";puts(dest);
   cout<<"\nNo of seats reserved :\t"<<nosr;
   for(i=0;i<nosr;i++)
   {
   cout<<i<<"\nPassenger name:\t";puts(pname[i]);
   cout<<"Passenger age :\t"<<age[i];
   }
   cout<<"\nYour class :\t";puts(clas);
   cout<<"\nDate of Reservation :\t"<<d<<"-"<<m<<"-"<<y;
   cout<<"\nYour concession category :\t"<<con;
   cout<<"\nYou must pay :\t"<<"Rs. "<<amc<<" /-"<<endl;

   }
   class canc
   {
   public :
   int pnr;
   int tno;
   char tname[100];
   char bp[10];
   char dest[100];
   char pname[10][100];
   int age[20];
   int i;
   char clas[10];
   int nosc;
   int d,m,y;
   float amr;
   void getcancdet();
   void displaycancdet();
   };
   void canc::displaycancdet()
   {clrscr();
    cout<<"_____________________________________________________\n\n";
    cout<< "PNR no :\t"<<pnr;
    cout<<"\nTrain no :\t"<<tno;
    cout<<"\nTrain Name :\t";puts(tname);
    cout<<"\nBoarding Point :\t";puts(bp);
    cout<<"\nDestination Point :\t";puts(tname);
    cout<<"\nYour class :\t";puts(clas);
    cout<<"\n No of seats to be cancelled :"<<nosc;
    for(i=0;i<nosc;i++)
    {
    cout<<i<<"Passenger name :\t";puts(pname[i]);
    cout<<"\nPassenger age :\t"<<age[i];
    }
    cout<<"\n Date of cancellation :\t"<<d<<"-"<<m<<"-"<<y;
    cout<<"\n You can collect :\t"<<"Rs. "<<amr<<" /-"<<endl;
    }
   void canc::getcancdet()
   {clrscr();
    cout<<"Enter Details :\n";
    cout<<"_______________\n";
    cout<<"1.PNR no :\n";cin>>pnr;

    cout<<"2.Date of cancellation :\n\n";
    cout<<" Day :\n";
    cin>>d;
    cout<<" Month :\n";
    cin>>m;
    cout<<" Year :\n";
    cin>>y;
    }
    void manage();
    void can();
    void user();
    void database();
    void res();
    void reserve();
    void displaypassdetail();
    void cancell();
    void enquiry();


    void main()
    {
     clrscr();
     cleardevice();

     logo();

    setbkcolor(RED);
    textcolor(RED);
    int ch1;
    do
    {
    clrscr();
    cout<<"________________________________________HOME_______________________________\n";
    cout<<"\n\n\n\t\t1.Admin Mode\t2.User Mode\t3.Exit\n\n";
    cin>>ch1;
    cout<<endl;
    switch(ch1)
    {
     case 1:
     database();
     break;
     case 2:
     user();
     break;
     case 3:
     alphaload();
     exit(0);
     
     default:cout<<"\n\nWrong Choice..";
     }
     }while(ch1<=3);
      getch();

     }

     void database()
     {
       char *password;
       char *pass="spectrum";
       password=getpass("Enter the administrator password :");

     detail a;
     fstream f;
     int ch2;
     char c;
     if(strcmp(pass,password)!=0)
     {
     cout<<"\nenter the password correctly...\n ";
     cout<<"You are not permitted to logon this mode!!!!\n";
     delay(2000);
     goto h;
     }
     else if(strcmp(pass,password)==0)
     { clrscr();
      char c;
     do
     { //q:
      alphaload();
      clrscr();
      cout<<"____________________________________Admin Menu________________________________\n\n";
     cout<<"\n\n\t\t1. Create Date Base\n\n\t\t2.Add Details\n\n\t\t3.Display Details\n\n\t\t4.User Management\n\n\t\t5.Display Passenger Details\n\n\t\t6.Return to Main Menu \n\n";
     cin>>ch2;

     cout<<endl;
     switch(ch2)
     { case 1:
      cleardevice; 
      alphaload();
      f.open("t.txt",ios::out|ios::binary);
      do
      {textcolor(15);
      a.getdetail();
      f.write((char *) & a,sizeof(a));
      cout<<"Do you want to add one more record ? (y\n)\n";
      cin>>c;
      }
      while(c=='y'||c=='Y');
      f.close();
      break;
      case 2:
      cleardevice(); alphaload();
      f.open("t.txt",ios::in|ios::binary|ios::app);
      a.getdetail();
      f.write((char *) & a,sizeof(a));
      f.close();
      break;
      case 3: //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   cleardevice();
    alphaload();
      f.open("t.txt",ios::in|ios::app|ios::binary);
      f.seekg(0);
      cout<<"tno\tBP\tDP \tDate\tSeats(F)  Seats(S)  Fare(F) Fare(S)\n";
      cout<<"___\t__\t__ \t____\t________  ________  _______ _______\n";

      while(f.read((char *) & a,sizeof(a)))
      {
	 a.dispdetail();
     getch();
      }
      f.close();
      break;
      case 4:
      cleardevice();
      alphaload();
      manage();
      break;
      case 5:
      cleardevice();
      displaypassdetail();
      break;
      }
     }
      while(ch2<=5);
      f.close();
      h:
      }}
      void reserve()
      {
      clrscr(); alphaload();
      int ch3;
      do
      {
      cout<<"\n\n\t\t1.Reserve\t\t2.Return to Main Menu\n\n";
      cin>>ch3;
      cout<<endl;
      switch(ch3)
      {case 1:
      res();
      break;
      }}
      while(ch3==1);
      }getch();

      void res()  // =eqw=fgewrwrgr3qqg2yr22q3y4jh4eweht4esj4yrj5rye
       {
      detail a;
      reser b;
      fstream f1,f2;
     // time_t t;
      f1.open("t.txt",ios::in|ios::out|ios::binary);
      f2.open("p.txt",ios::in|ios::out|ios::binary|ios::app);
      int ch;
      b.getresdet();
      while(f1.read((char *)&a,sizeof(a)));
      {
      if(a.tno==b.tno1)
      {
      if(strcmp(b.clas,f)==0)
      {
      if(a.c1>=b.nosr)
      {
      amt=a.c1fare;
      addr=f1.tellg();
      ad=sizeof(a.c1);
      f1.seekp(addr-(7*ad));
      a.c1=a.c1-b.nosr;
      f1.write((char *)& a.c1,sizeof(a.c1));
      if(b.con==1)
      {cout<<"Concession Category : Men above 60 Years of Age \n\n";
       b.amc=b.nosr*((amt*40)/100);
       }       //aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaamcmcmcmcmcmc
       else if(b.con==2)
       {
       cout<<"Concession Category : Women above 58 Years of Age \n\n";
       b.amc=b.nosr*((amt*50)/100);
       }
       else if(b.con==3)
       {
       cout<<"Concession Category : Children below 5 years of Age \n\n";
       b.amc= 0;
       }
       else if(b.con==4)
       {
       cout<<"You cannot get any concession \n\n";
       b.amc=b.nosr*amt;
       getch();
       }
       //srand((unsigned) time(&t));
       randomize();

       b.pnr=1000+random(1000);

       f2.write((char *) & b,sizeof(b));
       b.displayres();
       cout<<"\n\n\n\t\t________________________\n";
	     cout<<"\t\t|Your Ticket is reserved|\n";
	     cout<<"\t\t________________________ \n";

	   getch();
	   cout<<"You Must pay :\tRs."<<b.amc<<"/-";
	   getch();
	     }
	     else
	     {cout<<"\n\n\t\t Sorry..Required Seats Not Available!!\n\n";
	     }}

	   else if(strcmp(b.clas,s)==0)
	   {
	   if(a.c2>=b.nosr)
	   {
	   amt=a.c2fare;
	   addr=f1.tellg();
	   ad=sizeof(a.c2);
	   f1.seekp(addr-(5*ad));
	   a.c2=a.c2-b.nosr;
	   f1.write((char *)&a.c2,sizeof(a.c2));
	   if(b.con==1)
	   {           //rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrwipro
	   cout<<"Concession Category :Men Above 60 years of Age \n";
	   b.amc=b.nosr*((amt*60)/100);
	   }
	   else if(b.con==3)
	   {
	   cout<<"Concession category : Children below Five Years of Age\n";
	   b.amc=0;
	   }
	   else if(b.con==4)
	   {
	   cout<<"You cannot get any concession\n";
	   b.amc=b.nosr*amt;
	   }
	   f2.write((char *)& b,sizeof(b));
	   b.displayres();
	   clrscr();

	   cout<<"\n\n\n\n\n\t\t __________________________ \n";
	       cout<<"\t\t |Your Ticket is Reserved..| \n";
	       cout<<"\t\t___________________________\n\n";
	     delay(2000);
	     clrscr();}
	       else
	       {
	       cout<<"\n___Sorry..Required No of Seats not Available!_____\n";
	       }
	       }
	       getch();
	      clrscr();
	      alphaload();
	       goto h;
	       }
	       else if(a.tno!=b.tno1)
	       {
	       flag=0;
	       }}
	       if(flag==0)
	       { cleardevice();
		 cout<<"\n\n\n\n\n\t _____________________ \n";
		       cout<<"\t |Wrong Train Number..| \n";
		       cout<<"\t _____________________\n\n";

	      cout<<"\n\nEnter train no from database..\n\n";
	      }
	      f1.close();
	      f2.close();
	      getch();
	      h:
	      }
	      void displaypassdetail()
	      { clrscr();
	      fstream f;
	      reser b;
	      if(!f)
	     // crash();

	      f.open("p.txt",ios::in|ios::out|ios::binary);
	      f.seekg(0);
	      while(f.read((char *)&b,sizeof(b)));
	      {
	      alphaload();//[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
	      b.displayres();//tttttttttttttttttttttaaaaaaaaaaatttttttttttttt
	      getch();
	      }
	      getch();
	      f.close();

	      }
	      void enquiry()
	      {clrscr();
	      fstream f;
	      f.open("t.txt",ios::in|ios::out|ios::binary);
	      detail a;
	      while(f.read((char *)&a,sizeof(a)))
	      {
	      a.dispdetail();
	      }
	      getch();
	      }
	      void cancell()
	      { detail a; //222222222222222222222222222222222222222222222222
	      reser b;
	      canc c;
	      fstream f1,f2,f3;
	      f1.open("t.txt",ios::in|ios::out|ios::binary);
	      f2.open("p.txt",ios::in|ios::out|ios::binary);
	      f3.open("cn.txt",ios::in|ios::out|ios::binary);
	      clrscr();
	      alphaload();
	      cout<<" _______________________________CANCELLATION___________________________\n\n\n";
	      c.getcancdet();//11111111111111111111111111111111111111111111111111
	      while(f2.read((char *)& b,sizeof(b)))
	      {
	      if(b.pnr==c.pnr)
	      { flag=1;
	      c.tno=b.tno;
	  //  strcpy(c.tname,b.tname);
	      strcpy(c.bp,b.bp);
	      strcpy(c.dest,b.dest);
	      c.nosc=b.nosr;
	      for(int j=0;j<c.nosc;j++)
	      {
	      strcpy(c.pname[j],b.pname[j]);
	      c.age[j]=b.age[j];
	      }
	      strcpy(c.clas,b.clas);
	      if(strcmp(c.clas,f)==0)
	      {
	      while(f1.read((char *)&a,sizeof(a)))
	      {
	      if(a.tno==c.tno)
	      {
	      a.c1=a.c1+c.nosc;
	      d=a.d;
	      m=a.m;
	      addr=f1.tellg();
	      ad=sizeof(a.c1);
	      f1.seekp(addr-(7*ad));
	      f1.write((char *)& a.c1,sizeof(a.c1));
	      tamt=b.amc;
	      if((c.d==d)&&(c.m==m))
	      {
	      cout<<"You are cancelling at the date of departure...\n\n";
	      c.amr=tamt=((tamt*60)/100);
	      }
	      else if(c.m==m)
	      {
	      cout<<"You are cancelling at the month of departure...\n\n";
	      c.amr=tamt-((tamt*50)/100);
	      }
	      else if(m>c.m)
	      {
	      cout<<"You are cancelling one month before the date of departure\n\n";
	      c.amr=tamt-((tamt*20)/100);
	      }
	      else
	      {
	      cout<<"Cancelling after the departure\n";
	      cout<<"Your request cannot be completed\n";
	      }

	      c.displaycancdet();
	     goto h;
	      }
	      }
	      }
	      else if(strcmp(c.clas,s)==0)
	      {
	      while(f1.read((char *)&a,sizeof(a)))
	      {
	      if(a.tno==c.tno)
	      {
	      a.c2=a.c2+c.nosc;
	      d=a.d;
	      m=a.m;
	      addr=f1.tellg();
	      ad=sizeof(a.c2);
	      f1.seekp(addr=(5*ad));
	      f1.write((char *)&a.c2,sizeof(a.c2));
	      tamt=b.amc;
	      if((c.d==d)&&(c.m==m))
	      {cout<<"\n\nYou are cancelling at the date of departure\n\n";
	      c.amr=tamt-((tamt*60)/100);
	      }
	      else if(c.m==m)
	      {
	      cout<<"You are cancelling at the month of departure\n\n";
	      c.amr=tamt=((tamt*50)/100);
	      }
	      else if(m>c.m)
	      {
	      cout<<"You are cancelling one month before the date of departure\n\n";
	      c.amr=tamt-((tamt*20)/100);
	      }
	      else
	      {
	      cout<<"\n\nCancelling after the departure..\n\n";
	      cout<<"Your request cannot be completed..\n\n";
	      }
	      c.displaycancdet();
	      goto h;
	      }
	      }
	      }
	      }
	      else
	      {
	      flag=0;
	      }
	      }
	      h:
	      if(flag==0)
	      {
	      cout<<"Enter the correct PNR no\n";
	      }
	      f1.close();
	      f2.close();
	      f3.close();
	      getch();
	      }
	      void can()
	      {
	      int ch5;
	      do
	      {
	      cout<<"__________________________________CANCELLATION___________________________\n\n";
	      cout<<"\n\n\n\t1.Cancel\t\t2.Return to Main Menu\n\n";
	      cin>>ch5;
	      cout<<endl;
	      switch(ch5)
	      {
	      case 1:
	      cancell();
	      break;
	      }
	      }
	      while(ch5==1);
	      getch();
	      }
	      void user()
	      {
	      login a;
	      int ch0,c;
	      clrscr();alphaload();
	      cout<<"________________________________________USER MENU______________________________\n\n\n";

	       char *password;
       fstream f;
       f.open("id.txt",ios::in|ios::out|ios::binary);
       char id[100];
     int i3;
     puts("Enter your id :");
     cout<<"\n";gets(id);
     password= getpass("Enter Your Password ");

      while(f.read((char *) & a,sizeof(a)))
      {
      if((strcmp(a.id,id)==0)&&(strcmp(a.pass,password)==0))
      {
      do
      {clrscr();

      cout<<"\n\n\n\t\t1.Reserve\t\t2.Cancel\n";
      cout<<"\t\t3.Enquiry\t\t4.Return to Main Menu\n\n\n";
      cin>>ch0;
      cout<<endl;
      switch(ch0)
      {
       case 1:
       clrscr();
       reserve();
       break;
       case 2:
       clrscr();
       cancell();
       break;
       case 3:
       clrscr();
       enquiry();
       break;
       case 4:
       c=0;
       break;
       }
       }
       while(ch0<=3);

       }
       else
       {d=1;
      }
      if(c==0)
      {d=0;}

       }
       if(d==1)
       {
       cout<<"\nEnter your user id and password correctly\n\n";
       }
       delay(1000);

       }
       void manage()
       {
       int ch9;
       fstream f;
       char c;

       login a;
       clrscr();

       cout<<"_____________________________USER MANAGEMENT____________________________\n\n\n";
       do
       {clrscr();
       cout<<"\n\t\t1.Create id data base\t\t2.Add details\n\n";
       cout<<"\t\t 3.Display details\t\t4.Return to Main Menu\n\n\n";
       cin>>ch9;
       cout<<endl;
       switch(ch9)
       {
       case 1:
       f.open("id.txt",ios::out|ios::binary);
       do
       {clrscr();
       a.getid();
       f.write((char *)&a,sizeof(a));
       cout<<"Do you want to add one more record? (y/n)\n\n";
       cin>>c;
       }
       while(c=='y'||c=='Y');
       f.close();
       break;
       case 2:
       clrscr();
       f.open("id.txt",ios::in|ios::out|ios::binary|ios::app);
       a.getid();
       f.write((char *)&a,sizeof(a));
       f.close();
       break;
       case 3:
       clrscr();
       f.open("id.txt",ios::in|ios::out|ios::binary);
       f.seekg(0);
       while(f.read((char *)&a,sizeof(a)))
       {
       a.displayid();
       }
	f.close();
       getch();
       break;
       case 4:
       clrscr();
      // goto q;
       }
       }
       while(ch9<=3);
       getch();
       }

